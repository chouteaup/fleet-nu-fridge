Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 4bcef0f2-c3b3-465b-b0e1-6fc0c0928ad7"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 19d4f536-fd84-41c7-9136-290990fb972d"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: fe478c8e-b89b-42b1-a0e4-728da5088370"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: a0baaf25-7d1c-40df-a794-be6baa8d68d9"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 7aebbd46-e5df-424c-afc6-7fff6bbb48a1"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 0a5e583c-76ce-44d2-8fbc-ca17d760a85f"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 6366c88f-0f26-49fb-9642-1eefcabcf229"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 2a47e8cb-418f-4635-9e76-54adbda57bd9"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 1956e54a-2396-4f11-8d2c-750d92077b62"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 35c0abb9-c932-478d-bf81-af815d8c55cb"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: b85c4a5a-48b4-4f4d-b397-278f808cfa59"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 45a58fdf-4756-4a1e-8a09-0d79417ff9a2"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 3e0ccc3d-e4d1-4981-b605-707801eefe7b"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: c811dace-bfec-44b0-aa77-b7982ca6d5f0"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5ba708d2-467a-4789-8a5d-5b351e258701"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 1d68b6ab-2f04-4c6d-b872-5c838a830763"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 35621598-4878-4714-b354-b4f561c33175"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 35621598-4878-4714-b354-b4f561c33175"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: cb548a7b-62f8-4f6c-b336-295d900f3ea2"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 8c02d0c1-b081-4253-a3ab-695a4310dcf8"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: b0cc13b6-b6bd-4ceb-92ea-427e85fd767a"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: e9e6de70-02ed-4217-9a80-14e6739bd6bf"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 4a468c68-ab78-4dbe-896d-f42533d7ac23"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 76eec7b3-4514-4955-b4e2-75395213e7e5"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 33043cd2-3df2-4820-b7dc-49d739a2b1cd"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: adbddbc7-f8c0-439e-a7f4-77d118256750"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 92d28eb0-f686-4dcf-8a1a-658ac32d9664"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 4798bac6-1a14-4f8b-b2a7-e47e703df08e"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 598646e9-4e9f-4fad-a2f9-30d6478b22b4"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 2f4d8997-fc2d-4665-a05a-22b002026df7"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 1678d5d2-6861-443d-9073-bccfdb351613"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 608f53a5-e83b-40f7-8827-3b59c9c7a3e6"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: d7c15428-204b-43c1-a8ee-70283d710ded"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5c6e3a0a-13d3-49cc-a99e-3f9b991282ab"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 133b9c85-b660-45ad-bc15-f6b5e5aa7eb0"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 577cd7c1-d415-4bfa-b55e-a49f658209b5"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: a6e0a3c1-ffe0-4b40-aa21-e56a7d901545"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5a716193-9e09-4e72-8f86-33cd429b39b2"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 36cf56d3-87c7-43c0-b95d-3eae0bfffa89"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: e37b4115-32cb-44bc-aa24-38ba0d9c6c07"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: cc15f891-1b15-40eb-b29c-323e943903c0"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5dd7218f-9231-46f0-b49f-bec01d8b0ae5"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5e181bf1-9aa7-4e5c-b976-92e0884ad6dc"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 5a3b0840-17a3-4fba-abd6-ada0883b1409"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: c1992868-f111-402d-8eb0-aef631d74d99"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 3db73ce8-df63-4241-a1d7-137b0b6f05be"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 3db73ce8-df63-4241-a1d7-137b0b6f05be"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: b194c408-03de-48d8-bdb8-934982d74583"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 676c5aa4-112d-4ced-89ff-7adfb61f0df4"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: e3c0851e-48b0-4ce5-b9ed-282ce18ff690"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 1fea7745-bb15-4843-9525-8b14da6f12bf"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: c2860ae8-a3e9-4805-92d6-b36d4157c9fe"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 2ad08fad-bbc8-4ec0-9523-f5269f750518"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: f966a7d4-42f0-4b0a-bf63-6c5d1f88a9da"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 09bc32eb-38cd-4e21-b8e0-c8b171b54a26"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 23e1c69c-f240-4388-aaf0-bb676848af8c"}]}

Run 'docker run --help' for more information
Unable to find image 'acrfleetcoredev.azurecr.io/fleetcore-smartkiosk-backend:latest' locally
docker: Error response from daemon: Head "https://acrfleetcoredev.azurecr.io/v2/fleetcore-smartkiosk-backend/manifests/latest": unauthorized: {"errors":[{"code":"UNAUTHORIZED","message":"authentication required, visit https://aka.ms/acr/authorization for more information. CorrelationId: 0a963087-c6ff-4bdb-acde-c808c96568bc"}]}

Run 'docker run --help' for more information
Unable to find image 'nginx:alpine' locally
alpine: Pulling from library/nginx
9824c27679d3: Pulling fs layer
6bc572a340ec: Pulling fs layer
403e3f251637: Pulling fs layer
9adfbae99cb7: Pulling fs layer
7a8a46741e18: Pulling fs layer
c9ebe2ff2d2c: Pulling fs layer
a992fbc61ecc: Pulling fs layer
cb1ff4086f82: Pulling fs layer
9adfbae99cb7: Waiting
7a8a46741e18: Waiting
c9ebe2ff2d2c: Waiting
a992fbc61ecc: Waiting
cb1ff4086f82: Waiting
403e3f251637: Verifying Checksum
403e3f251637: Download complete
6bc572a340ec: Download complete
9824c27679d3: Verifying Checksum
9824c27679d3: Download complete
9824c27679d3: Pull complete
9adfbae99cb7: Download complete
6bc572a340ec: Pull complete
7a8a46741e18: Verifying Checksum
7a8a46741e18: Download complete
403e3f251637: Pull complete
c9ebe2ff2d2c: Verifying Checksum
c9ebe2ff2d2c: Download complete
9adfbae99cb7: Pull complete
7a8a46741e18: Pull complete
c9ebe2ff2d2c: Pull complete
a992fbc61ecc: Verifying Checksum
a992fbc61ecc: Download complete
a992fbc61ecc: Pull complete
cb1ff4086f82: Verifying Checksum
cb1ff4086f82: Download complete
cb1ff4086f82: Pull complete
Digest: sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
Status: Downloaded newer image for nginx:alpine
Unable to find image 'alpine:latest' locally
latest: Pulling from library/alpine
9824c27679d3: Already exists
Digest: sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
Status: Downloaded newer image for alpine:latest
docker: Error response from daemon: failed to set up container networking: network nufridge-internal not found

Run 'docker run --help' for more information
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 1.3s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 167.39kB 0.0s done
#4 DONE 0.1s

#5 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 resolve docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e 0.0s done
#5 sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e 7.67kB / 7.67kB done
#5 sha256:929b04d7c782f04f615cf785488fed452b6569f87c73ff666ad553a7554f0006 1.72kB / 1.72kB done
#5 sha256:ee77c6cd7c1886ecc802ad6cedef3a8ec1ea27d1fb96162bf03dd3710839b8da 6.18kB / 6.18kB done
#5 sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870 0B / 3.64MB 0.1s
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 0B / 40.01MB 0.1s
#5 sha256:1e5a4c89cee5c0826c540ab06d4b6b491c96eda01837f430bd47f0d26702d6e3 0B / 1.26MB 0.1s
#5 sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870 1.05MB / 3.64MB 0.3s
#5 sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870 3.15MB / 3.64MB 0.4s
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 2.10MB / 40.01MB 0.4s
#5 extracting sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870
#5 sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870 3.64MB / 3.64MB 0.4s done
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 8.39MB / 40.01MB 0.5s
#5 sha256:1e5a4c89cee5c0826c540ab06d4b6b491c96eda01837f430bd47f0d26702d6e3 1.05MB / 1.26MB 0.5s
#5 sha256:25ff2da83641908f65c3a74d80409d6b1b62ccfaab220b9ea70b80df5a2e0549 0B / 446B 0.5s
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 22.02MB / 40.01MB 0.7s
#5 sha256:1e5a4c89cee5c0826c540ab06d4b6b491c96eda01837f430bd47f0d26702d6e3 1.26MB / 1.26MB 0.5s done
#5 extracting sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870 0.1s done
#5 sha256:25ff2da83641908f65c3a74d80409d6b1b62ccfaab220b9ea70b80df5a2e0549 446B / 446B 0.6s done
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 35.65MB / 40.01MB 0.9s
#5 sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 40.01MB / 40.01MB 1.0s done
#5 extracting sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e
#5 extracting sha256:dd71dde834b5c203d162902e6b8994cb2309ae049a0eabc4efea161b2b5a3d0e 2.4s done
#5 extracting sha256:1e5a4c89cee5c0826c540ab06d4b6b491c96eda01837f430bd47f0d26702d6e3 0.0s done
#5 extracting sha256:25ff2da83641908f65c3a74d80409d6b1b62ccfaab220b9ea70b80df5a2e0549 done
#5 DONE 3.7s

#6 [2/8] WORKDIR /app
#6 DONE 0.0s

#7 [3/8] RUN apk add --no-cache     dumb-init     tini
#7 0.226 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/main/x86_64/APKINDEX.tar.gz
#7 0.356 fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/community/x86_64/APKINDEX.tar.gz
#7 0.735 (1/2) Installing dumb-init (1.2.5-r3)
#7 0.743 (2/2) Installing tini (0.19.0-r3)
#7 0.750 Executing busybox-1.37.0-r12.trigger
#7 0.764 OK: 10 MiB in 19 packages
#7 DONE 0.8s

#8 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#8 DONE 0.4s

#9 [5/8] COPY package*.json ./
#9 DONE 0.0s

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 0.553 npm warn config only Use `--omit=dev` to omit dev dependencies from the install.
#10 5.312 
#10 5.312 added 155 packages, and audited 156 packages in 5s
#10 5.312 
#10 5.312 21 packages are looking for funding
#10 5.312   run `npm fund` for details
#10 5.313 
#10 5.313 found 0 vulnerabilities
#10 5.315 npm notice
#10 5.315 npm notice New major version of npm available! 10.8.2 -> 11.6.1
#10 5.315 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.6.1
#10 5.315 npm notice To update run: npm install -g npm@11.6.1
#10 5.315 npm notice
#10 5.485 npm warn using --force Recommended protections disabled.
#10 DONE 5.9s

#11 [7/8] COPY src/ ./src/
#11 DONE 0.0s

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 DONE 0.4s

#13 exporting to image
#13 exporting layers
#13 exporting layers 0.3s done
#13 writing image sha256:b8b5a5396cb789feee5b16904d6e235d893370917b239ea20137afd85021c5db done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.3s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.1s done
#5 DONE 0.1s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#9 CACHED

#10 [2/8] WORKDIR /app
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:d15f85af06fa9267cea1a10dbc57a19a26dff4604b4ab34e1ff37dd86a01e0c2 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [7/8] COPY src/ ./src/
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [5/8] COPY package*.json ./
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:87e678f1d7ade677b4198bd47ffcd805c8b2aea65bc85085628d11ee6c209b8e done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 DONE 0.0s

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [2/8] WORKDIR /app
#9 CACHED

#10 [3/8] RUN apk add --no-cache     dumb-init     tini
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:9e1f5876caf3ac1c175e095b4c2b65f4c860d5170c34dce105e335163baceaba done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [5/8] COPY package*.json ./
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [2/8] WORKDIR /app
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:bfd276a4ebf7c5d9c22f8e30a7b9b69941b8d29d6d0f16492b05ca661b6fe472 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [2/8] WORKDIR /app
#6 CACHED

#7 [3/8] RUN apk add --no-cache     dumb-init     tini
#7 CACHED

#8 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:50451ebb2f153d4750265daebe06a152bb3ab4b33ce7cc3348b12f94641d8169 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:b1b2404b98e07b5984e181d1fe2b9547e32f78e97c542e7a1c887c0db1eda719 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.1s

#6 [5/8] COPY package*.json ./
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:ae7ba217e67a653f45b7d013d14707c227d387368885f0dca52bee45b84d5ef0 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [2/8] WORKDIR /app
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:8ae215ed38f33a443227963c710db78038b8f31bba669f5b1acc59593ab8c4ed done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ...

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.4s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#6 CACHED

#7 [5/8] COPY package*.json ./
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [2/8] WORKDIR /app
#9 CACHED

#10 [3/8] RUN apk add --no-cache     dumb-init     tini
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:7600a537c393264163ad7b5c99aa38f018c035231592affb5f756b502d3d9a23 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.1s done
#5 DONE 0.1s

#6 [5/8] COPY package*.json ./
#6 CACHED

#7 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [7/8] COPY src/ ./src/
#9 CACHED

#10 [2/8] WORKDIR /app
#10 CACHED

#11 [3/8] RUN apk add --no-cache     dumb-init     tini
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:cb3dd1917dcc940566f6dda979d6ac26c6d51c02802ec8c68044a79dc4d92b5b done
#13 naming to docker.io/library/nufridge-backend-internal:latest
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 ...

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 CANCELED
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [5/8] COPY package*.json ./
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [2/8] WORKDIR /app
#9 CACHED

#10 [3/8] RUN apk add --no-cache     dumb-init     tini
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:80ebd9601a02c5806c87d617f881e6f308456d79d294173ef5d1a0f8b78c6e34 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.3s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [7/8] COPY src/ ./src/
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:734dd1b1fb4a534e67bd16ec899e97e95004bfa39cd92818bcb06a4272dc8f84 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [3/8] RUN apk add --no-cache     dumb-init     tini
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:6c4b85864873bca451eed5e6944cf89043799eb6fbef54fa546dd3550e2e1078 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:09e89a2d822eac8de93dc9ad90dd11fdde2b3eb90df9604174dc1fd30080f734 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/tenant-sources:latest
#3 ...

#4 [internal] load metadata for docker.io/library/node:18-alpine
#4 DONE 0.1s

#3 [internal] load metadata for docker.io/library/tenant-sources:latest
#3 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:241d94c49ecb103d11a08e369ffaaa3b63c54bfe3ffa6b07ce0eb12481d96edd done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/tenant-sources:latest
#3 ...

#4 [internal] load metadata for docker.io/library/node:18-alpine
#4 DONE 0.1s

#3 [internal] load metadata for docker.io/library/tenant-sources:latest
#3 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:be6a65e5b5f357b62aca376ee765a97b7a163a6b4157ed8221f6efcf02046cd6 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.1s done
#5 DONE 0.1s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:f2f91e219a1ad46d62c62e3ab11205f1493de6a5f54019d9c446f6903b5de807 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [2/8] WORKDIR /app
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:4b729853363560ffe771549736b0fcbf44a592aa3e14d1aefa079fb0aeab9954 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.1s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [7/8] COPY src/ ./src/
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [5/8] COPY package*.json ./
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:a79927a75eab73df833f4e053dc5593fc96e747b20ac3912429e67208a914e25 done
#13 naming to docker.io/library/nufridge-backend-internal:latest
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [5/8] COPY package*.json ./
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [7/8] COPY src/ ./src/
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [2/8] WORKDIR /app
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:138062883618a598e627c7daa0fbf9a2cf4263f2aa755310275c93fa34044d3e done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [3/8] RUN apk add --no-cache     dumb-init     tini
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:4fec3e22c375109c0b20682102416f26724e060717d42d7d2db1d5690f939e89 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:449dde49f4311e1fac6f13b391412f54ca1116270efb012578dde4ff929e5826 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [3/8] RUN apk add --no-cache     dumb-init     tini
#6 CACHED

#7 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#7 CACHED

#8 [7/8] COPY src/ ./src/
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [2/8] WORKDIR /app
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:73095d3d6f63edff400f448fcb308ee1983bef7009664bedce704cc783097133 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 422B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.1s

#4 [internal] load metadata for docker.io/library/tenant-sources:latest
#4 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
------
 > [internal] load metadata for docker.io/library/tenant-sources:latest:
------
Dockerfile.tenant:8
--------------------
   6 |     
   7 |     # Intégrer les customizations tenant si disponibles
   8 | >>> COPY --from=tenant-sources /app/tenant/* ./src/tenant/ || true
   9 |     
  10 |     RUN npm run build
--------------------
ERROR: failed to build: failed to solve: tenant-sources: failed to resolve source metadata for docker.io/library/tenant-sources:latest: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.8s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 167.39kB 0.0s done
#5 DONE 0.1s

#6 [2/8] WORKDIR /app
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [5/8] COPY package*.json ./
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:9ce9a25c8cf558f40148b9ffb39be63c716ebee9b1319814393b4e3ad63a825d done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 309B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 1.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [builder 2/6] WORKDIR /app
#6 CACHED

#7 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#7 resolve docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8 0.0s done
#7 sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8 10.33kB / 10.33kB done
#7 sha256:60e48a050b6408d0c5dd59b98b6e36bf0937a0bbe99304e3e9c0e63b7563443a 2.50kB / 2.50kB done
#7 sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0b6d9da6405976946 0B / 1.81MB 0.1s
#7 sha256:403e3f251637881bbdc5fb06df8da55c149c00ccb0addbcb7839fa4ad60dfd04 0B / 628B 0.1s
#7 sha256:4a86014ec6994761b7f3118cf47e4b4fd6bac15fc6fa262c4f356386bbc0e9d9 10.78kB / 10.78kB done
#7 sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 0B / 3.80MB 0.1s
#7 sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 1.05MB / 3.80MB 0.3s
#7 sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 3.15MB / 3.80MB 0.4s
#7 sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0b6d9da6405976946 1.81MB / 1.81MB 0.5s
#7 sha256:403e3f251637881bbdc5fb06df8da55c149c00ccb0addbcb7839fa4ad60dfd04 628B / 628B 0.5s done
#7 sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 3.80MB / 3.80MB 0.5s
#7 sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316bcfce64b07f80719f 0B / 955B 0.5s
#7 sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0b6d9da6405976946 1.81MB / 1.81MB 0.5s done
#7 sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 3.80MB / 3.80MB 0.5s done
#7 extracting sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 0.1s
#7 sha256:7a8a46741e18ed98437271669138116163f14596f411c1948fd7836e39f1afea 0B / 405B 0.6s
#7 sha256:c9ebe2ff2d2cd981811cefb6df49a116da6074c770c07ee86a6ae2ebe7eee926 0B / 1.21kB 0.6s
#7 sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316bcfce64b07f80719f 955B / 955B 0.7s
#7 extracting sha256:9824c27679d3b27c5e1cb00a73adb6f4f8d556994111c12db3c5d61a0c843df8 0.1s done
#7 extracting sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0b6d9da6405976946
#7 sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316bcfce64b07f80719f 955B / 955B 0.7s done
#7 sha256:7a8a46741e18ed98437271669138116163f14596f411c1948fd7836e39f1afea 405B / 405B 0.8s done
#7 sha256:c9ebe2ff2d2cd981811cefb6df49a116da6074c770c07ee86a6ae2ebe7eee926 1.21kB / 1.21kB 0.7s done
#7 extracting sha256:6bc572a340ecbc60aca0c624f76b32de0b073d5efa4fa1e0b6d9da6405976946 0.1s done
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 0B / 16.84MB 0.9s
#7 sha256:a992fbc61ecc9d8291c27f9add7b8a07d374c06a435d4734519b634762cf1c51 0B / 1.40kB 0.9s
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 2.10MB / 16.84MB 1.0s
#7 sha256:a992fbc61ecc9d8291c27f9add7b8a07d374c06a435d4734519b634762cf1c51 1.40kB / 1.40kB 0.9s done
#7 extracting sha256:403e3f251637881bbdc5fb06df8da55c149c00ccb0addbcb7839fa4ad60dfd04 done
#7 extracting sha256:9adfbae99cb79774fdc14ca03a0a0154b8c199a69f69316bcfce64b07f80719f done
#7 extracting sha256:7a8a46741e18ed98437271669138116163f14596f411c1948fd7836e39f1afea
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 3.15MB / 16.84MB 1.1s
#7 extracting sha256:7a8a46741e18ed98437271669138116163f14596f411c1948fd7836e39f1afea done
#7 extracting sha256:c9ebe2ff2d2cd981811cefb6df49a116da6074c770c07ee86a6ae2ebe7eee926 done
#7 extracting sha256:a992fbc61ecc9d8291c27f9add7b8a07d374c06a435d4734519b634762cf1c51 done
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 7.34MB / 16.84MB 1.2s
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 14.68MB / 16.84MB 1.4s
#7 sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 16.84MB / 16.84MB 1.5s done
#7 extracting sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb
#7 extracting sha256:cb1ff4086f82493a4b8b02ec71bfed092cad25bd5bf302aec78d4979895350cb 1.0s done
#7 DONE 2.7s

#8 [internal] load build context
#8 transferring context: 126.39MB 3.9s done
#8 DONE 4.1s

#9 [builder 3/6] COPY package*.json ./
#9 DONE 0.2s

#10 [builder 4/6] RUN npm install
#10 4.685 npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
#10 5.091 npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
#10 5.601 npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
#10 6.839 npm warn deprecated @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
#10 6.848 npm warn deprecated @humanwhocodes/config-array@0.13.0: Use @eslint/config-array instead
#10 10.77 npm warn deprecated eslint@8.57.1: This version is no longer supported. Please see https://eslint.org/version-support for other options.
#10 22.01 
#10 22.01 added 407 packages, and audited 408 packages in 21s
#10 22.01 
#10 22.01 137 packages are looking for funding
#10 22.01   run `npm fund` for details
#10 22.02 
#10 22.02 2 moderate severity vulnerabilities
#10 22.02 
#10 22.02 To address all issues (including breaking changes), run:
#10 22.02   npm audit fix --force
#10 22.02 
#10 22.02 Run `npm audit` for details.
#10 22.03 npm notice
#10 22.03 npm notice New major version of npm available! 10.8.2 -> 11.6.1
#10 22.03 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.6.1
#10 22.03 npm notice To update run: npm install -g npm@11.6.1
#10 22.03 npm notice
#10 DONE 22.2s

#11 [builder 5/6] COPY . .
#11 DONE 4.0s

#12 [builder 6/6] RUN npm run build
#12 0.486 
#12 0.486 > smartkiosk-frontend@1.0.0 build
#12 0.486 > vite build
#12 0.486 
#12 0.794 vite v4.5.14 building for production...
#12 0.885 transforming...
#12 1.184 [plugin:vite:dynamic-import-vars] invalid import "/tenant/${componentName}.jsx". Variable absolute imports are not supported, imports must start with ./ in the static part of the import. For example: import(`./foo/${bar}.js`).
#12 8.012 ✓ 2263 modules transformed.
#12 8.247 rendering chunks...
#12 8.604 computing gzip size...
#12 8.625 dist/index.html                   3.66 kB │ gzip:   1.41 kB
#12 8.625 dist/assets/index-b0f90862.css    3.29 kB │ gzip:   1.10 kB
#12 8.625 dist/assets/router-5d3a8f60.js   20.73 kB │ gzip:   7.70 kB
#12 8.625 dist/assets/http-6d45885a.js     77.94 kB │ gzip:  26.84 kB
#12 8.625 dist/assets/index-2855a305.js    87.37 kB │ gzip:  21.44 kB
#12 8.625 dist/assets/vendor-1fce6ab0.js  141.41 kB │ gzip:  45.46 kB
#12 8.625 dist/assets/charts-b6915d9f.js  376.96 kB │ gzip: 103.75 kB
#12 8.626 ✓ built in 7.83s
#12 DONE 8.7s

#13 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#13 DONE 0.0s

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 DONE 0.0s

#15 exporting to image
#15 exporting layers 0.0s done
#15 writing image sha256:19a55a338f6535905df3dd1473242428bd15296ed4972160846c7dd408185649 done
#15 naming to docker.io/library/nufridge-frontend-internal:latest done
#15 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.3s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 CACHED

#5 [internal] load build context
#5 transferring context: 5.60kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 DONE 0.0s

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 DONE 0.0s

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 DONE 0.2s

#9 exporting to image
#9 exporting layers 0.0s done
#9 writing image sha256:52a5b80856cd7a7ea2ddc1f64861315bdaa54912d951955eaf8ba1388e933fb8 done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.7s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 167.39kB 0.1s done
#5 DONE 0.1s

#6 [2/8] WORKDIR /app
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [3/8] RUN apk add --no-cache     dumb-init     tini
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:1df88540c0c389c2175c41ccedb994600be7638aaa929ef8992732247134c43f done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
docker: Error response from daemon: Conflict. The container name "/nufridge-backend" is already in use by container "6e3d60f0bd015fcdaa3939be5a118cca28919ce60335fb7d9ecac65373acf873". You have to remove (or rename) that container to be able to reuse that name.

Run 'docker run --help' for more information
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [2/8] WORKDIR /app
#6 CACHED

#7 [5/8] COPY package*.json ./
#7 CACHED

#8 [7/8] COPY src/ ./src/
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:c6a5a8e6facd3639754d848940a6732dcfaf975b7bf4d96b0bff004e07135c6b done
#13 naming to docker.io/library/nufridge-backend-internal:latest 0.0s done
#13 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.7s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 126.39MB 2.5s done
#7 DONE 2.6s

#8 [builder 2/6] WORKDIR /app
#8 CACHED

#9 [builder 3/6] COPY package*.json ./
#9 CACHED

#10 [builder 4/6] RUN npm install
#10 CACHED

#11 [builder 5/6] COPY . .
#11 DONE 3.5s

#12 [builder 6/6] RUN npm run build
#12 0.606 
#12 0.606 > smartkiosk-frontend@1.0.0 build
#12 0.606 > vite build
#12 0.606 
#12 1.027 vite v4.5.14 building for production...
#12 1.100 transforming...
#12 1.352 [plugin:vite:dynamic-import-vars] invalid import "/tenant/${componentName}.jsx". Variable absolute imports are not supported, imports must start with ./ in the static part of the import. For example: import(`./foo/${bar}.js`).
#12 8.915 ✓ 2263 modules transformed.
#12 9.260 rendering chunks...
#12 9.525 computing gzip size...
#12 9.556 dist/index.html                   3.66 kB │ gzip:   1.41 kB
#12 9.556 dist/assets/index-b0f90862.css    3.29 kB │ gzip:   1.10 kB
#12 9.556 dist/assets/router-5d3a8f60.js   20.73 kB │ gzip:   7.70 kB
#12 9.556 dist/assets/http-6d45885a.js     77.94 kB │ gzip:  26.84 kB
#12 9.556 dist/assets/index-ec3bccf8.js    87.37 kB │ gzip:  21.44 kB
#12 9.556 dist/assets/vendor-1fce6ab0.js  141.41 kB │ gzip:  45.46 kB
#12 9.556 dist/assets/charts-b6915d9f.js  376.96 kB │ gzip: 103.75 kB
#12 9.557 ✓ built in 8.53s
#12 DONE 9.6s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 CACHED

#13 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#13 DONE 0.0s

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 DONE 0.0s

#15 exporting to image
#15 exporting layers 0.0s done
#15 writing image sha256:cf0d4793f60132cc40ac8f24c7ef784193caf542747f8c7f38e6d931161c19ca done
#15 naming to docker.io/library/nufridge-frontend-internal:latest done
#15 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.60kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:6f52c21fbbc9264b22b46190da0671d4218889df632c18be88e4e41423dad6f8 done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.4s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [5/8] COPY package*.json ./
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:2992b77ae83b6db53b23a461b66c62ad3724140e43d78801698d8aabfc910e6e done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 1.78MB 0.9s done
#7 DONE 1.0s

#8 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#8 CACHED

#9 [builder 6/6] RUN npm run build
#9 CACHED

#10 [builder 4/6] RUN npm install
#10 CACHED

#11 [builder 2/6] WORKDIR /app
#11 CACHED

#12 [builder 5/6] COPY . .
#12 CACHED

#13 [builder 3/6] COPY package*.json ./
#13 CACHED

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 CACHED

#15 exporting to image
#15 exporting layers done
#15 writing image sha256:9391fb84f75df6b059299f2995f04dd1353081e9bd3ec3af45867469ac1da4b6 done
#15 naming to docker.io/library/nufridge-frontend-internal:latest 0.0s done
#15 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 1.07kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:553dac1ea8903824187697bfdf3a1c7e4f5bfe3913e739a0fb2ef296b06249bd done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#6 CACHED

#7 [7/8] COPY src/ ./src/
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [3/8] RUN apk add --no-cache     dumb-init     tini
#9 CACHED

#10 [2/8] WORKDIR /app
#10 CACHED

#11 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:8f5b63236d56392e96434e51a47e2971821ad45cb65c3303e84b0c1c3efa681f done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 1.78MB 0.9s done
#7 DONE 0.9s

#8 [builder 5/6] COPY . .
#8 CACHED

#9 [builder 2/6] WORKDIR /app
#9 CACHED

#10 [builder 6/6] RUN npm run build
#10 CACHED

#11 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#11 CACHED

#12 [builder 3/6] COPY package*.json ./
#12 CACHED

#13 [builder 4/6] RUN npm install
#13 CACHED

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 CACHED

#15 exporting to image
#15 exporting layers done
#15 writing image sha256:40ac1b01677c6d560e8a04ba46c3dcb17d615c9844cbb1a8138681a7dd25c91f done
#15 naming to docker.io/library/nufridge-frontend-internal:latest done
#15 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 1.07kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:03199993d7a573d97c126b67998815b1ada147d247a021927cc7f13f8100809b done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [5/8] COPY package*.json ./
#8 CACHED

#9 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#9 CACHED

#10 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#10 CACHED

#11 [3/8] RUN apk add --no-cache     dumb-init     tini
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:59d829697dc8b6347562bb9f5d4446bbf7ccd95994433a7e136cf3aba1e935bc done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [internal] load metadata for docker.io/library/node:18-alpine
#3 DONE 0.2s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 1.78MB 0.8s done
#7 DONE 0.9s

#8 [builder 5/6] COPY . .
#8 CACHED

#9 [builder 2/6] WORKDIR /app
#9 CACHED

#10 [builder 3/6] COPY package*.json ./
#10 CACHED

#11 [builder 4/6] RUN npm install
#11 CACHED

#12 [builder 6/6] RUN npm run build
#12 CACHED

#13 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#13 CACHED

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 CACHED

#15 exporting to image
#15 exporting layers done
#15 writing image sha256:54aae658b9af35b2a8e4a14dda7ccb614fbb9f0283d4a926c5ab22c00e81090a done
#15 naming to docker.io/library/nufridge-frontend-internal:latest 1.1s done
#15 DONE 1.1s
Error response from daemon: network nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 1.07kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:79c5175ead7590354241dfdd5accffd54ce7bde033facf825fa947a0e2661569 done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.7s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 167.39kB 0.1s done
#5 DONE 0.1s

#6 [7/8] COPY src/ ./src/
#6 CACHED

#7 [3/8] RUN apk add --no-cache     dumb-init     tini
#7 CACHED

#8 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#8 CACHED

#9 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#9 CACHED

#10 [5/8] COPY package*.json ./
#10 CACHED

#11 [2/8] WORKDIR /app
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:37c59e9cac8400b19a1c4c218e62ae76becd11ecdb5e577da2fafcd5909fd108 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
docker: Error response from daemon: Conflict. The container name "/nufridge-backend" is already in use by container "7500bc7aea0d6b40c125699edfad2f880e6ec725ef14345f1ffebc7e42404839". You have to remove (or rename) that container to be able to reuse that name.

Run 'docker run --help' for more information
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [5/8] COPY package*.json ./
#6 CACHED

#7 [2/8] WORKDIR /app
#7 CACHED

#8 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#8 CACHED

#9 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#9 CACHED

#10 [3/8] RUN apk add --no-cache     dumb-init     tini
#10 CACHED

#11 [7/8] COPY src/ ./src/
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:e711bd1a196382673a6f0ccf019d7c5affa7c3036aa912a01ab5ca81e06c5a94 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
Error response from daemon: network fridge_nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.7s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 126.39MB 2.4s done
#7 DONE 2.5s

#8 [builder 5/6] COPY . .
#8 CACHED

#9 [builder 6/6] RUN npm run build
#9 CACHED

#10 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#10 CACHED

#11 [builder 2/6] WORKDIR /app
#11 CACHED

#12 [builder 3/6] COPY package*.json ./
#12 CACHED

#13 [builder 4/6] RUN npm install
#13 CACHED

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 CACHED

#15 exporting to image
#15 exporting layers done
#15 writing image sha256:e94fbd7d782e8312b30bda929efc62eaee59c1853215d8124d6ccaf07207b450 0.0s done
#15 naming to docker.io/library/nufridge-frontend-internal:latest done
#15 DONE 0.0s
Error response from daemon: network fridge_nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.1s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 5.60kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:ec5e8ff8a5750352599f57accf4ebec1b4731e98c3f049fbaaf8f6d365b1f303 done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 954B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 312B 0.0s done
#5 DONE 0.0s

#6 [4/8] RUN addgroup -g 1001 -S nodejs &&     adduser -S smartkiosk -u 1001 -G nodejs
#6 CACHED

#7 [3/8] RUN apk add --no-cache     dumb-init     tini
#7 CACHED

#8 [2/8] WORKDIR /app
#8 CACHED

#9 [5/8] COPY package*.json ./
#9 CACHED

#10 [7/8] COPY src/ ./src/
#10 CACHED

#11 [6/8] RUN npm ci --only=production &&     npm cache clean --force
#11 CACHED

#12 [8/8] RUN mkdir -p logs &&     chown -R smartkiosk:nodejs logs
#12 CACHED

#13 exporting to image
#13 exporting layers done
#13 writing image sha256:491dc946d7e99d2863e5976a64a80cae7ceda8306d64d595a4a65c2fceecd816 done
#13 naming to docker.io/library/nufridge-backend-internal:latest done
#13 DONE 0.0s
Error response from daemon: network fridge_nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 473B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 ...

#3 [internal] load metadata for docker.io/library/nginx:alpine
#3 DONE 0.2s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [builder 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#6 DONE 0.0s

#7 [internal] load build context
#7 transferring context: 1.78MB 0.8s done
#7 DONE 0.8s

#8 [builder 5/6] COPY . .
#8 CACHED

#9 [stage-1 2/3] COPY --from=builder /app/dist /usr/share/nginx/html
#9 CACHED

#10 [builder 3/6] COPY package*.json ./
#10 CACHED

#11 [builder 6/6] RUN npm run build
#11 CACHED

#12 [builder 2/6] WORKDIR /app
#12 CACHED

#13 [builder 4/6] RUN npm install
#13 CACHED

#14 [stage-1 3/3] COPY nginx.conf /etc/nginx/nginx.conf
#14 CACHED

#15 exporting to image
#15 exporting layers done
#15 writing image sha256:b084616451358eedda16da837cf2c40f60f9ad591d049f2526dfc903e3a6048b done
#15 naming to docker.io/library/nufridge-frontend-internal:latest done
#15 DONE 0.0s
Error response from daemon: network fridge_nufridge-test-network not found
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile.tenant
#1 transferring dockerfile: 233B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 0.1s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/4] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 1.07kB done
#5 DONE 0.0s

#6 [2/4] COPY nginx.conf /etc/nginx/nginx.conf.template
#6 CACHED

#7 [3/4] COPY nginx-tenant.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [4/4] RUN mkdir -p /var/log/nginx
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:a6bd87e77c27d5a25b41b396f12a0c64ccb96d97887f547f720c6dc61f24772e done
#9 naming to docker.io/library/nufridge-nginx-internal:latest done
#9 DONE 0.0s
